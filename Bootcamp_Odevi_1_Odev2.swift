import UIKit

/*
Ã–dev 1.1 â€“ DeÄŸiÅŸkenler ve Veri Tipleri
Kendi kiÅŸisel bilgi kartÄ±nÄ±zÄ± oluÅŸturun.
Int, String, Bool, Double tiplerini kullanÄ±n.
Optional deÄŸiÅŸkenlerle gÃ¼venli kod yazÄ±mÄ±nÄ± deneyimleyin.
*/

// KiÅŸisel bilgi kartÄ±
var name: String = "Muhammet"
var age: Int = 26
var height: Double = 1.74
var isStudent: Bool = false

// Optional deÄŸiÅŸkenler (nil olabilirler)
var phoneNumber: String? = nil
var email: String? = "muhammet@deneme.com"

// GÃ¼venli unwrap etme (Optional Binding)
if let phone = phoneNumber {
    print("Telefon: \(phone)")
} else {
    print("Telefon numarasÄ± yok.")
}

// KartÄ± yazdÄ±rma
print("""
ğŸ‘¤ KiÅŸisel Bilgi KartÄ±
Ä°sim: \(name)
YaÅŸ: \(age)
Boy: \(height) m
Ã–ÄŸrenci mi?: \(isStudent)
Email: \(email ?? "Belirtilmedi")
""")

/*
 Ã–dev 1.2 â€“ Fonksiyonlar ve Closureâ€™lar
 Basit bir hesap makinesi fonksiyonu yazÄ±n (toplama, Ã§Ä±karma, Ã§arpma, bÃ¶lme).
 Closure kullanarak bir diziyi filtreleyin ve sÄ±ralayÄ±n.
*/

func calculator(_ a: Double, _ b: Double, operation: String) -> Double? {
    switch operation {
    case "topla":
        return a + b
    case "Ã§Ä±kar":
        return a - b
    case "Ã§arp":
        return a * b
    case "bÃ¶l":
        return b != 0 ? a / b : nil  // SÄ±fÄ±ra bÃ¶lme kontrolÃ¼
    default:
        return nil
    }
}

if let result = calculator(10, 5, operation: "Ã§arp") {
    print("SonuÃ§: \(result)")
} else {
    print("GeÃ§ersiz iÅŸlem")
}


//Closure kullanarak bir diziyi filtreleyin ve sÄ±ralayÄ±n.
let numbers = [3, 7, 2, 9, 1, 6, 4]

// Ã‡ift sayÄ±larÄ± filtrele
let evenNumbers = numbers.filter { $0 % 2 == 0 }
print("Ã‡ift SayÄ±lar: \(evenNumbers)")

// KÃ¼Ã§Ã¼kten bÃ¼yÃ¼ÄŸe sÄ±ralama
let sortedNumbers = numbers.sorted { $0 < $1 }
print("SÄ±ralÄ± SayÄ±lar: \(sortedNumbers)")

